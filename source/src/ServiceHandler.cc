/// \file ServiceHandler.cc
/*
 *
 * ServiceHandler.cc source template automatically generated by a class generator
 * Creation date : dim. dï¿½c. 4 2016
 *
 * This file is part of DQM4HEP libraries.
 *
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */

#include "dqm4hep/ServiceHandler.h"
#include "dqm4hep/Service.h"

namespace dqm4hep {

  namespace net {

    ServiceHandler::~ServiceHandler() {
      /* nop */
    }

    //-------------------------------------------------------------------------------------------------

    const std::string &ServiceHandler::name() const {
      return m_name;
    }

    //-------------------------------------------------------------------------------------------------

    Client *ServiceHandler::client() const {
      return m_pClient;
    }

    //-------------------------------------------------------------------------------------------------

    ServiceHandler::UpdateSignal &ServiceHandler::onServiceUpdate() {
      return m_updateSignal;
    }

    //-------------------------------------------------------------------------------------------------

    void ServiceHandler::receiveServiceUpdated(const Buffer &data) {
      m_updateSignal.process(data);
    }

    //-------------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------------

    ServiceHandler::ServiceInfo::ServiceInfo(ServiceHandler *pHandler)
        : DimUpdatedInfo((char *)pHandler->name().c_str(), (void *)nullptr, 0), m_pHandler(pHandler) {
      /* nop */
    }

    //-------------------------------------------------------------------------------------------------

    void ServiceHandler::ServiceInfo::infoHandler() {
      char *data = (char *)this->getData();
      int size = this->getSize();

      if (nullptr == data || size == 0)
        return;

      // std::string contents(data, size);
      Buffer buffer;
      buffer.adopt(data, size);
      m_pHandler->receiveServiceUpdated(buffer);
    }
  }
}
